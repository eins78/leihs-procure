# source: http://localhost:3003/procure/graphql
# timestamp: Mon May 28 2018 11:37:42 GMT+0200 (CEST)

schema {
  query: QueryRoot
  mutation: MutationRoot
}

input AdminInput {
  user_id: ID!
}

type Attachment {
  filename: String
  id: ID!
  url: String!
}

type BudgetLimit {
  amount_cents: Int!
  amount_currency: String!
  budget_period: BudgetPeriod!
  id: ID!
  main_category: MainCategory!
}

input BudgetLimitInput {
  amount_cents: Int
  budget_period_id: ID!
}

type BudgetPeriod {
  can_delete: Boolean!
  end_date: String!
  id: ID!
  inspection_start_date: String!
  name: String!
  total_price_cents_approved_quantities: Int!
  total_price_cents_order_quantities: Int!
  total_price_cents_requested_quantities: Int!
}

input BudgetPeriodInput {
  end_date: String!
  id: ID
  inspection_start_date: String!
  name: String!
}

type Building {
  id: ID!
  name: String!
}

type Category {
  can_delete: Boolean!
  cost_center: String
  general_ledger_account: String
  id: ID!
  inspectors: [User]
  name: String!
  viewers: [User]
}

input CategoryInput {
  cost_center: String
  general_ledger_account: String
  id: ID
  inspectors: [ID]
  name: String!
  viewers: [ID]
}

input CategoryViewersInput {
  id: ID!
  viewers: [ID]
}

type CurrentUser {
  saved_filters: SavedFilters
  user: User!
}

type MainCategory {
  budget_limits: [BudgetLimit]
  can_delete: Boolean!
  categories: [Category]
  id: ID!
  image_url: String
  name: String!
}

input MainCategoryInput {
  budget_limits: [BudgetLimitInput]
  categories: [CategoryInput]
  id: ID
  name: String!
}

type Model {
  id: ID!
  product: String!
  version: String
}

"""Root of all mutations."""
type MutationRoot {
  admins(input_data: [AdminInput]): [User]
  budget_periods(input_data: [BudgetPeriodInput]): [BudgetPeriod]
  categories_viewers(input_data: [CategoryViewersInput]): [Category]
  main_categories(input_data: [MainCategoryInput]): [MainCategory]
  request(input_data: RequestInput): Request
  requesters_organizations(input_data: [RequesterOrganizationInput]): [RequesterOrganization]
}

type Organization {
  id: ID!
  name: String!
  organizations: [Organization]
  parent_id: ID
  shortname: String
}

"""Root of all queries."""
type QueryRoot {
  admins: [User]
  budget_limits: [BudgetLimit]
  budget_periods: [BudgetPeriod]
  categories(inspected_by_auth_user: Boolean): [Category]
  current_user: CurrentUser
  main_categories: [MainCategory]
  organizations(root_only: Boolean!): [Organization]
  priorities: [Int]
  priorities_inspector: [Int]
  requesters_organizations: [RequesterOrganization]
  requests(budget_period_id: [ID], category_id: [ID], from_categories_of_auth_user: Boolean, id: [ID], inspectory_priority: [String], organization_id: [ID], priority: [String], requested_by_auth_user: Boolean, search: String, state: [String]): [Request]
  rooms(building_id: ID!): [Room]
  users(exclude_ids: [ID], limit: Int!, offset: Int!, search_term: String!): [User]
}

type Request {
  accounting_type: RequestFieldString
  approved_quantity: RequestFieldInt
  article_name: RequestFieldString
  article_number: RequestFieldString
  attachments: RequestFieldAttachments
  budget_period: BudgetPeriod!
  category: Category!
  id: RequestFieldID
  inspection_comment: RequestFieldString
  internal_order_number: RequestFieldString
  location_name: RequestFieldString
  model: RequestFieldModel
  motivation: RequestFieldString
  order_quantity: RequestFieldInt
  organization: Organization!
  price_cents: RequestFieldInt
  price_currency: RequestFieldString
  priority: RequestFieldInt
  priority_inspector: RequestFieldInt
  receiver: RequestFieldString
  replacement: RequestFieldBoolean
  requested_quantity: RequestFieldInt
  room: RequestFieldRoom
  state: RequestFieldString
  supplier: RequestFieldSupplier
  supplier_name: RequestFieldString
  user: User!
}

type RequesterOrganization {
  department: Organization!
  id: ID!
  organization: Organization!
  user: User!
}

input RequesterOrganizationInput {
  department: String!
  organization: String!
  user_id: ID!
}

type RequestFieldAttachments {
  read: Boolean!
  value: [Attachment]
  write: Boolean!
}

type RequestFieldBoolean {
  read: Boolean!
  value: Boolean
  write: Boolean!
}

type RequestFieldID {
  read: Boolean!
  value: ID!
  write: Boolean!
}

type RequestFieldInt {
  read: Boolean!
  value: Int
  write: Boolean!
}

type RequestFieldModel {
  read: Boolean!
  value: Model
  write: Boolean!
}

type RequestFieldRoom {
  read: Boolean!
  value: Room!
  write: Boolean!
}

type RequestFieldString {
  read: Boolean!
  value: String
  write: Boolean!
}

type RequestFieldSupplier {
  read: Boolean!
  value: Supplier
  write: Boolean!
}

input RequestInput {
  accounting_type: String
  approved_quantity: Int
  article_name: String!
  article_number: String
  budget_period_id: ID!
  category_id: ID!
  id: ID!
  inspection_comment: String
  internal_order_number: String
  location_name: String
  model_id: ID
  motivation: String
  order_quantity: Int
  organization_id: ID!
  price_cents: Int
  price_currency: String
  priority: Int
  priority_inspector: Int
  receiver: String
  replacement: Boolean
  requested_quantity: Int!
  room_id: ID!
  supplier_id: ID
  supplier_name: String
  user_id: ID!
}

type Room {
  building: Building!
  id: ID!
  name: String!
}

type SavedFilters {
  budget_period_ids: [ID]
  categories_with_requests: Boolean
  category_ids: [ID]
  inspector_priorities: [String]
  organization_ids: [ID]
  priorities: [String]
  search: String
  sort_by: String
  sort_dir: String
  states: [String]
}

type Supplier {
  id: ID!
  name: String!
}

type User {
  email: String
  firstname: String!
  id: ID!
  lastname: String
  login: String
}
